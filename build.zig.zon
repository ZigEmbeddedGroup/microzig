.{
    .name = "microzig",
    .version = "0.0.0",
    .dependencies = .{
        .@"microzig/build-internals" = .{ .path = "build-internals" },

        // tools
        .@"microzig/tools/regz" = .{ .path = "tools/regz" },
        .@"microzig/tools/uf2" = .{ .path = "tools/uf2" },

        // examples
        // .@"examples/nordic/nrf5x" = .{ .path = "examples/nordic/nrf5x" },
        // .@"examples/nxp/lpc" = .{ .path = "examples/nxp/lpc" },
        // .@"examples/microchip/atsam" = .{ .path = "examples/microchip/atsam" },
        // .@"examples/microchip/avr" = .{ .path = "examples/microchip/avr" },
        // .@"examples/gigadevice/gd32" = .{ .path = "examples/gigadevice/gd32" },
        // .@"examples/stmicro/stm32" = .{ .path = "examples/stmicro/stm32" },
        // .@"examples/espressif/esp" = .{ .path = "examples/espressif/esp" },
        // .@"examples/raspberrypi/rp2xxx" = .{ .path = "examples/raspberrypi/rp2xxx" },

        // ports
        .@"microzig/port/raspberrypi/rp2xxx" = .{ .path = "port/raspberrypi/rp2xxx", .lazy = true },
        .@"microzig/port/nxp/lpc" = .{ .path = "port/nxp/lpc", .lazy = true },

        // used for creating package tarballs
        .boxzer = .{
            .url = "https://github.com/mattnite/boxzer/archive/6bd6636d780f626af1c40a27be2680e223965c8a.tar.gz",
            .hash = "1220432ca3323f0a7033fd84df6d0f2d66aecf4c5301b3ac70c96cca8b0938164f17",
        },
    },
    .paths = .{
        "build.zig",
        "build.zig.zon",
        "src",
    },
}
