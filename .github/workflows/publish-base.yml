name: Reusable binary publish workflow

permissions:
  contents: write

on:
  workflow_call:
    inputs:
      # The tag that we are publishing to
      tag:
        required: false
        type: string
        default: ""
      # The name that will be used to download artifact from github
      github-artifact-name:
        required: true
        type: string
      # The name of what we are publishing
      artifact-name:
        required: true
        type: string
      # The path after the target-path to publish the artifact to
      # {artifact | {target-path}/{target-artifact-path}
      target-artifact-path:
        required: false
        type: string
        default: ""
      # The path within the github artifact that the artifact is located at.
      source-path:
        required: true
        type: string
    secrets:
      # The target path within the host share to save files to
      target-path:
        required: true
      ssh-key:
        required: true
      host:
        required: true
      port:
        required: true
      user:
        required: true

jobs:
  publish:
    runs-on: macos-latest
    steps:
      - name: Check tag status
        if: ${{ startsWith(github.ref, 'refs/tags/') && ! endsWith(github.ref, inputs.tag) }}
        uses: actions/github-script@v3
        with:
          script: |
            core.setFailed("Provided tag does not match github ref tag")
      - name: Download artifacts
        id: download
        uses: actions/download-artifact@v4
        with:
          name: ${{ inputs.github-artifact-name }}
      - name: Get Source Path
        shell: bash
        id: get-source-path
        run: |
          echo "path=$(realpath -s --relative-to="${{ github.workspace }}" "${{ steps.download.outputs.download-path }}/${{ inputs.source-path }}")" >> $GITHUB_OUTPUT
      - name: Publish Release
        uses: easingthemes/ssh-deploy@main
        with:
          SSH_PRIVATE_KEY: ${{ secrets.ssh-key }}
          ARGS: "-vzrli"
          SOURCE: ${{ steps.get-source-path.outputs.path }}
          REMOTE_HOST: ${{ secrets.host }}
          REMOTE_USER: ${{ secrets.user }}
          REMOTE_PORT: ${{ secrets.port }}
          TARGET: ${{ secrets.target-path }}/${{ inputs.target-artifact-path }}
      #- name: Handle Folder Release Artifact
      #  if: ${{ startsWith(github.ref, 'refs/tags/') && endsWith(github.ref, inputs.tag) }}
      #  shell: bash
      #  run: |
      #    mkdir -p "artifacts-${{ github.sha }}"
      #    for i in "${{ steps.download.outputs.download-path }}/${{ inputs.source-path }}"/*; do
      #      echo "Artifact path $i"
      #      if [[ -d "$i" ]]; then
      #        echo "Artifact is path"
      #        dirname="$(basename "$i")"
      #        echo "Artifact directory $dirname. Compressing folder to ${{ inputs.artifact-name }}-${dirname}.tar.gz"
      #        tar -czvf "${{ inputs.artifact-name }}-${dirname}.tar.gz" -C "$i" .
      #        echo "Moving tar to artifacts-${{ github.sha }}"
      #        mv "${{ inputs.artifact-name }}-${dirname}.tar.gz" "artifacts-${{ github.sha }}"
      #      else
      #        echo "Artifact is file"
      #        echo "Move to: artifacts-${{ github.sha }}"
      #        mv "$i" "artifacts-${{ github.sha }}"
      #      fi
      #    done
      - name: Create Release Draft
        if: ${{ startsWith(github.ref, 'refs/tags/') && endsWith(github.ref, inputs.tag) }}
        uses: ncipollo/release-action@v1
        with:
          # artifacts: "artifacts-${{ github.sha }}/*"
          # artifactErrorsFailBuild: true
          draft: true
          generateReleaseNotes: true
          tag: ${{ inputs.tag }}
          prerelease: ${{ contains(inputs.tag, '-beta') || contains(inputs.tag, '-alpha') || contains(inputs.tag, '-rc') }}
